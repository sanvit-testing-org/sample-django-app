kind: pipeline
type: docker
name: Evaluate

steps:
- name: initialize
  image: python:3.9.12-bullseye
  commands:
  - "#장고 서버를 실행하기 전 필요한 작업들을 실행하는 단계입니다."
  - pip install -r requirements.txt -t .
  - python manage.py migrate

- name: django-server
  image: python:3.9.12-bullseye
  detach: true
  commands:
  - "#장고 서버를 실행합니다."
  - "#장고는 아래 명령어로 실행이 가능해야 합니다."
  - python manage.py runserver 0.0.0.0:8000

- name: wait-for-django-startup
  image: alpine/curl:3.14
  commands:
  - "#장고 서버가 작동하는지 확인하는 단계입니다."
  - "#1초당 1회 시도하며, 최대 10회 시도까지 응답하지 않을 경우 FAIL처리 됩니다."
  # - curl --retry 10 --retry-delay 1 --retry-all-errors -s -o /dev/null django-server:8000
  - curl --retry 10 --retry-delay 1 --retry-all-errors -o /dev/null django-server:8000

- name: check if django is running
  image: alpine/curl:3.14
  commands:
  - "curl -I -H \"Host: localhost\" http://django-server:8000/"
  - echo "blah blah blah" > a.log

- name: test 1
  image: alpine
  commands:
    - echo "Hello World2"
    - cat a.log
    - env

- name: 한글 스탭
  image: alpine
  commands:
    - echo "한글여기 잘 되나???"

- name: test 3
  image: alpine
  commands:
    - exit 0

- name: end-evaluation
  image: alpine
  commands:
    - echo "Checking evaluation status"
    - echo "posting evaluation result to GitHub"
    - echo "sending evaluation result SMS"
    - env
  when:
    status:
    - failure
    - success
  # depends_on:
  # - frontend
  # - backend

# - name: notify
#   image: plugins/slack
#   settings:
#     webhook:
#       from_secret: webhook
#   depends_on:
#   - frontend
#   - backend
